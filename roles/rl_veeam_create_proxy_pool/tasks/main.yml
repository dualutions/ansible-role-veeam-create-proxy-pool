---
# tasks file for rl_ansible_role_name

- name: Authenticate with VSPC API to get access token
  ansible.builtin.uri:
    url: '{{ veeam_backup_server_api_url }}:4443/v8/token'
    validate_certs: false
    method: POST
    body:
      grant_type: 'password'
      disable_antiforgery_token: true
      username: '{{ windows_local_admin_new_vm_username }}'
      password: '{{ windows_local_admin_new_vm_password }}'
    body_format: form-urlencoded
    headers:
      Content-Type: 'application/x-www-form-urlencoded'
    return_content: yes
    status_code: 200
  register: auth_response
  delegate_to: localhost
  no_log: false

- name: Set access token as a temporary fact for this playbook run
  ansible.builtin.set_fact:
    access_token: '{{ auth_response.json.access_token }}'

- name: Create Veeam M365 Backup Proxy Pool
  block:
    - name: Create proxy pool
      ansible.builtin.uri:
        url: '{{ veeam_backup_server_api_url }}:4443/v8/proxypools'
        validate_certs: false
        method: POST
        body_format: json
        body:
          name: "{{ veeam_backup_proxy_pool.name }}"
          description: "{{ veeam_backup_proxy_pool.description }}"
          proxyIds:
            - proxyId: "{{ veeam_proxy_server_uids[0] }}"
        status_code: [200, 201, 409]
        timeout: 200
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{ access_token }}"
      register: proxy_install_result
      delegate_to: localhost
      no_log: false

  rescue:
    - name: Handle already exists error
      ansible.builtin.debug:
        msg: "Proxy pool already exists, continuing"
      when: >
        proxy_install_result.status == 409 and 
        'already exists' in (proxy_install_result.msg | default(''))
      changed_when: false

    - name: Fail on other errors
      ansible.builtin.fail:
        msg: "Failed to create proxy pool: {{ proxy_install_result.msg }}"
      when: >
        proxy_install_result.status != 409 or 
        'already exists' not in (proxy_install_result.msg | default(''))

  always:
    - name: Set final result
      ansible.builtin.set_fact:
        proxy_pool_created: "{{ proxy_install_result.status in [200, 201] }}"
        proxy_pool_exists: "{{ proxy_install_result.status == 409 }}"

- name: Get Veeam Backup Proxy Pool UIDs from Veeam Backup Server via API
  ansible.builtin.uri:
    url: '{{ veeam_backup_server_api_url }}:4443/v8/proxypools'
    validate_certs: false
    method: GET
    headers:
      Authorization: 'Bearer {{ veeam_backup_server_api_access_token }}'
      Accept: 'application/json'
    return_content: true
    status_code: 200
  register: veeam_get_proxy_pool_uids
  delegate_to: localhost
  no_log: false

- name: Debug veeam_get_proxy_pool_uids
  ansible.builtin.debug:
    var: veeam_get_proxy_pool_uids

- name: Add second Veeam M365 Backup Proxy to Veeam M365 Backup Proxy Pool {{ veeam_backup_proxy_pool.name }}
  ansible.builtin.uri:
    url: '{{ veeam_backup_server_api_url }}:4443/v8/proxypools'
    validate_certs: false
    method: POST
    body_format: json
    body:
      name: "{{ veeam_backup_proxy_pool.name }}"
      description: "{{ veeam_backup_proxy_pool.description }}"
      proxyIds:
        - proxyId: "{{ veeam_proxy_server_uids[1] }}"
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ access_token }}"
    status_code: [200, 201, 409, -1]
    timeout: "200"
  register: proxy_install_result
  ignore_errors: false
  delegate_to: localhost
  no_log: false
  failed_when: >
    proxy_install_result.status not in [200, 201, 409]
  changed_when: >
    proxy_install_result.status in [200, 201, -1]