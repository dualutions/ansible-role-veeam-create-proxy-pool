---
# tasks file for rl_ansible_role_name

- name: Authenticate with VSPC API to get access token
  ansible.builtin.uri:
    url: '{{ veeam_backup_server_api_url }}:4443/v8/token'
    validate_certs: false
    method: POST
    body:
      grant_type: 'password'
      disable_antiforgery_token: true
      username: '{{ windows_local_admin_new_vm_username }}'
      password: '{{ windows_local_admin_new_vm_password }}'
    body_format: form-urlencoded
    headers:
      Content-Type: 'application/x-www-form-urlencoded'
    return_content: yes
    status_code: 200
  register: auth_response
  delegate_to: localhost
  no_log: true

- name: Set access token as a temporary fact for this playbook run
  ansible.builtin.set_fact:
    access_token: '{{ auth_response.json.access_token }}'
  no_log: true

- name: Create Veeam M365 Backup Proxy Pool on Veeam M365 Backup Server via REST API and add first proxy server
  ansible.builtin.uri:
    url: '{{ veeam_backup_server_api_url }}:4443/v8/proxypools'
    validate_certs: false
    method: POST
    body_format: json
    body:
      name: "{{ veeam_backup_proxy_pool.name }}"
      description: "{{ veeam_backup_proxy_pool.description }}"
      proxyIds:
        - proxyId: "{{ veeam_proxy_server_uids[0] }}"
    status_code: [200, 201, 409, 500]  # 500 hinzufÃ¼gen
    timeout: 200
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ access_token }}"
    return_content: true
  register: proxy_install_result
  ignore_errors: false
  delegate_to: localhost
  no_log: true
  failed_when: >
    proxy_install_result.status not in [200, 201, 409, 500] or
    (proxy_install_result.status in [409, 500] and 
     'already exists' not in (proxy_install_result.json.message | default(proxy_install_result.content | default(''))))
  changed_when: >
    proxy_install_result.status in [200, 201]

- name: Get Veeam Backup Proxy Pool UIDs from Veeam Backup Server via API
  ansible.builtin.uri:
    url: '{{ veeam_backup_server_api_url }}:4443/v8/proxypools'
    validate_certs: false
    method: GET
    headers:
      Authorization: 'Bearer {{ access_token }}'
      Accept: 'application/json'
    return_content: true
    status_code: 200
  register: veeam_get_proxy_pool_uids
  delegate_to: localhost
  no_log: true

- name: Get specific proxy pool ID by name
  set_fact:
    veeam_backup_proxy_pool_id: "{{ veeam_get_proxy_pool_uids.json.results | selectattr('name', 'equalto', veeam_backup_proxy_pool.name) | map(attribute='id') | first }}"
  no_log: true

- name: Add second Veeam M365 Backup Proxy to existing Proxy Pool
  ansible.builtin.uri:
    url: '{{ veeam_backup_server_api_url }}:4443/v8/proxypools/{{ veeam_backup_proxy_pool_id }}/proxies'
    validate_certs: false
    method: POST
    body_format: json
    body:
      - proxyId: "{{ veeam_proxy_server_uids[1] }}"
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ access_token }}"
    status_code: [200, 201, 204, 409]
    timeout: 200
    return_content: true
  register: proxy_add_result
  delegate_to: localhost
  no_log: true
  failed_when: >
    proxy_add_result.status not in [200, 201, 204, 409] or
    (proxy_add_result.status == 409 and 'already exists' not in (proxy_add_result.json.message | default(proxy_add_result.content | default(''))))
  changed_when: proxy_add_result.status in [200, 201, 204]

- name: Add third Veeam M365 Backup Proxy to existing Proxy Pool
  ansible.builtin.uri:
    url: '{{ veeam_backup_server_api_url }}:4443/v8/proxypools/{{ veeam_backup_proxy_pool_id }}/proxies'
    validate_certs: false
    method: POST
    body_format: json
    body:
      - proxyId: "{{ veeam_proxy_server_uids[2] }}"
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ access_token }}"
    status_code: [200, 201, 204, 409]
    timeout: 200
    return_content: true
  register: proxy_add_result
  delegate_to: localhost
  no_log: true
  failed_when: >
    proxy_add_result.status not in [200, 201, 204, 409] or
    (proxy_add_result.status == 409 and 'already exists' not in (proxy_add_result.json.message | default(proxy_add_result.content | default(''))))
  changed_when: proxy_add_result.status in [200, 201, 204]
  when: veeam_proxy_server_uids | length > 2

- name: Add fourth Veeam M365 Backup Proxy to existing Proxy Pool
  ansible.builtin.uri:
    url: '{{ veeam_backup_server_api_url }}:4443/v8/proxypools/{{ veeam_backup_proxy_pool_id }}/proxies'
    validate_certs: false
    method: POST
    body_format: json
    body:
      - proxyId: "{{ veeam_proxy_server_uids[3] }}"
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{ access_token }}"
    status_code: [200, 201, 204, 409]
    timeout: 200
    return_content: true
  register: proxy_add_result
  delegate_to: localhost
  no_log: true
  failed_when: >
    proxy_add_result.status not in [200, 201, 204, 409] or
    (proxy_add_result.status == 409 and 'already exists' not in (proxy_add_result.json.message | default(proxy_add_result.content | default(''))))
  changed_when: proxy_add_result.status in [200, 201, 204]
  when: veeam_proxy_server_uids | length > 3